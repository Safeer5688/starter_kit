{
  "contractName": "Color",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colors",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_color",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "tokensOfOwner",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.1+commit.c8a2cb62\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"tokensOfOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokenId\",\"type\":\"uint256\"},{\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_color\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"name()\":{\"details\":\"Gets the token name.\",\"return\":\"string representing the token name\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"return\":\"string representing the token symbol\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"tokenURI(uint256)\":{\"details\":\"Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query\"}},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"return\":\"uint256 representing the total amount of tokens\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/E/blockchainProject/collectibles/nft/src/contracts/Color.sol\":\"Color\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/blockchainProject/collectibles/nft/src/contracts/Color.sol\":{\"keccak256\":\"0xff2927950fc6b3969011edd4eccdf1695637b0b0b67ce9a48c2a099c7c10beb8\",\"urls\":[\"bzzr://25cdbdadb501271e9366cce8028b18b35dafc822d9040da964ba6e53dae28aec\"]},\"/E/blockchainProject/collectibles/nft/src/contracts/ERC721Full.sol\":{\"keccak256\":\"0x3ef3a4d194cd76bbc763643e19501c1fa922afd274a2d970d63efb0077915292\",\"urls\":[\"bzzr://4258fb72e3308bddea961b7cd1e028ccf228e7d838384029b8218fa89ce3464f\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060408051808201825260058082527f436f6c6f7200000000000000000000000000000000000000000000000000000060208084019190915283518085019094529083527f434f4c4f5200000000000000000000000000000000000000000000000000000090830152908181620000b17f01ffc9a70000000000000000000000000000000000000000000000000000000064010000000062000183810204565b620000e57f80ac58cd0000000000000000000000000000000000000000000000000000000064010000000062000183810204565b620001197f780e9d630000000000000000000000000000000000000000000000000000000064010000000062000183810204565b81516200012e90600990602085019062000252565b5080516200014490600a90602084019062000252565b50620001797f5b5e139f0000000000000000000000000000000000000000000000000000000064010000000062000183810204565b50505050620002f7565b7fffffffff0000000000000000000000000000000000000000000000000000000080821614156200021557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b7fffffffff00000000000000000000000000000000000000000000000000000000166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200029557805160ff1916838001178555620002c5565b82800160010185558215620002c5579182015b82811115620002c5578251825591602001919060010190620002a8565b50620002d3929150620002d7565b5090565b620002f491905b80821115620002d35760008155600101620002de565b90565b611b9c80620003076000396000f3fe608060405260043610610100577c0100000000000000000000000000000000000000000000000000000000600035046301ffc9a7811461010557806306fdde0314610162578063081812fc146101ec578063095ea7b31461023257806318160ddd1461026d57806323b872dd146102945780632f745c59146102d757806342842e0e146103105780634f6ccce7146103535780636352211e1461037d57806370a08231146103a75780638462151c146103da57806395d89b411461045d578063a22cb46514610472578063b88d4fde146104ad578063bd11f69d14610580578063c87b56dd146105aa578063d85d3d27146105d4578063e985e9c514610687575b600080fd5b34801561011157600080fd5b5061014e6004803603602081101561012857600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166106c2565b604080519115158252519081900360200190f35b34801561016e57600080fd5b506101776106f6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b1578181015183820152602001610199565b50505050905090810190601f1680156101de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f857600080fd5b506102166004803603602081101561020f57600080fd5b503561078d565b60408051600160a060020a039092168252519081900360200190f35b34801561023e57600080fd5b5061026b6004803603604081101561025557600080fd5b50600160a060020a038135169060200135610830565b005b34801561027957600080fd5b506102826109c8565b60408051918252519081900360200190f35b3480156102a057600080fd5b5061026b600480360360608110156102b757600080fd5b50600160a060020a038135811691602081013590911690604001356109ce565b3480156102e357600080fd5b50610282600480360360408110156102fa57600080fd5b50600160a060020a038135169060200135610a64565b34801561031c57600080fd5b5061026b6004803603606081101561033357600080fd5b50600160a060020a03813581169160208101359091169060400135610b22565b34801561035f57600080fd5b506102826004803603602081101561037657600080fd5b5035610b3e565b34801561038957600080fd5b50610216600480360360208110156103a057600080fd5b5035610be4565b3480156103b357600080fd5b50610282600480360360208110156103ca57600080fd5b5035600160a060020a0316610c7f565b3480156103e657600080fd5b5061040d600480360360208110156103fd57600080fd5b5035600160a060020a0316610d28565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610449578181015183820152602001610431565b505050509050019250505060405180910390f35b34801561046957600080fd5b50610177610d89565b34801561047e57600080fd5b5061026b6004803603604081101561049557600080fd5b50600160a060020a0381351690602001351515610dea565b3480156104b957600080fd5b5061026b600480360360808110156104d057600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561050b57600080fd5b82018360208201111561051d57600080fd5b8035906020019184600183028401116401000000008311171561053f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610eb9945050505050565b34801561058c57600080fd5b50610177600480360360208110156105a357600080fd5b5035610f52565b3480156105b657600080fd5b50610177600480360360208110156105cd57600080fd5b5035610ff9565b3480156105e057600080fd5b5061026b600480360360208110156105f757600080fd5b81019060208101813564010000000081111561061257600080fd5b82018360208201111561062457600080fd5b8035906020019184600183028401116401000000008311171561064657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611115945050505050565b34801561069357600080fd5b5061014e600480360360408110156106aa57600080fd5b50600160a060020a038135811691602001351661124d565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107825780601f1061075757610100808354040283529160200191610782565b820191906000526020600020905b81548152906001019060200180831161076557829003601f168201915b505050505090505b90565b60006107988261127b565b1515610814576040805160e560020a62461bcd02815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606482015290519081900360840190fd5b50600090815260026020526040902054600160a060020a031690565b600061083b82610be4565b9050600160a060020a0383811690821614156108c7576040805160e560020a62461bcd02815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b33600160a060020a03821614806108e357506108e3813361124d565b151561095f576040805160e560020a62461bcd02815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015290519081900360840190fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6109d83382611298565b1515610a54576040805160e560020a62461bcd02815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015290519081900360840190fd5b610a5f83838361137d565b505050565b6000610a6f83610c7f565b8210610aeb576040805160e560020a62461bcd02815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152600560205260409020805483908110610b0f57fe5b9060005260206000200154905092915050565b610a5f8383836020604051908101604052806000815250610eb9565b6000610b486109c8565b8210610bc4576040805160e560020a62461bcd02815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015290519081900360840190fd5b6007805483908110610bd257fe5b90600052602060002001549050919050565b600081815260016020526040812054600160a060020a0316801515610c79576040805160e560020a62461bcd02815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b92915050565b6000600160a060020a0382161515610d07576040805160e560020a62461bcd02815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382166000908152600360205260409020610c799061139c565b6060610d33826113a0565b805480602002602001604051908101604052809291908181526020018280548015610d7d57602002820191906000526020600020905b815481526020019060010190808311610d69575b50505050509050919050565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107825780601f1061075757610100808354040283529160200191610782565b600160a060020a038216331415610e4b576040805160e560020a62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610ec48484846109ce565b610ed0848484846113ba565b1515610f4c576040805160e560020a62461bcd02815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015290519081900360840190fd5b50505050565b600c805482908110610f6057fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015610ff15780601f10610fc657610100808354040283529160200191610ff1565b820191906000526020600020905b815481529060010190602001808311610fd457829003601f168201915b505050505081565b60606110048261127b565b1515611080576040805160e560020a62461bcd02815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015290519081900360840190fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610d7d5780601f106110e857610100808354040283529160200191610d7d565b820191906000526020600020905b8154815290600101906020018083116110f65750939695505050505050565b600d816040518082805190602001908083835b602083106111475780518252601f199092019160209182019101611128565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150611184905057600080fd5b600c8054600181018083556000928352835190916111cb917fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7909101906020860190611ab8565b5090506111d83382611536565b6001600d836040518082805190602001908083835b6020831061120c5780518252601f1990920191602091820191016111ed565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805460ff19169315159390931790925550505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b60006112a38261127b565b151561131f576040805160e560020a62461bcd02815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606482015290519081900360840190fd5b600061132a83610be4565b905080600160a060020a031684600160a060020a03161480611365575083600160a060020a031661135a8461078d565b600160a060020a0316145b806113755750611375818561124d565b949350505050565b611388838383611557565b6113928382611727565b610a5f828261181e565b5490565b600160a060020a0316600090815260056020526040902090565b60006113ce84600160a060020a031661185c565b15156113dc57506001611375565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b8381101561146f578181015183820152602001611457565b50505050905090810190601f16801561149c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156114be57600080fd5b505af11580156114d2573d6000803e3d6000fd5b505050506040513d60208110156114e857600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b6115408282611864565b61154a828261181e565b611553816119aa565b5050565b82600160a060020a031661156a82610be4565b600160a060020a0316146115ee576040805160e560020a62461bcd02815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515611673576040805160e560020a62461bcd028152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61167c816119ee565b600160a060020a038316600090815260036020526040902061169d90611a38565b600160a060020a03821660009081526003602052604090206116be90611a4f565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a03821660009081526005602052604081205461175190600163ffffffff611a5816565b6000838152600660205260409020549091508082146117ee57600160a060020a038416600090815260056020526040812080548490811061178e57fe5b90600052602060002001549050806005600087600160a060020a0316600160a060020a03168152602001908152602001600020838154811015156117ce57fe5b600091825260208083209091019290925591825260069052604090208190555b600160a060020a0384166000908152600560205260409020805490611817906000198301611b36565b5050505050565b600160a060020a0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6000903b1190565b600160a060020a03821615156118c4576040805160e560020a62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6118cd8161127b565b15611922576040805160e560020a62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6000818152600160209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915583526003909152902061196e90611a4f565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b600081815260026020526040902054600160a060020a031615611a35576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b8054611a4b90600163ffffffff611a5816565b9055565b80546001019055565b600082821115611ab2576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611af957805160ff1916838001178555611b26565b82800160010185558215611b26579182015b82811115611b26578251825591602001919060010190611b0b565b50611b32929150611b56565b5090565b815481835581811115610a5f57600083815260209020610a5f9181019083015b61078a91905b80821115611b325760008155600101611b5c56fea165627a7a7230582005165867a0c55037c6936c955d5aa73b262357d7e32c74ca8700c69cfc4106a30029",
  "deployedBytecode": "0x608060405260043610610100577c0100000000000000000000000000000000000000000000000000000000600035046301ffc9a7811461010557806306fdde0314610162578063081812fc146101ec578063095ea7b31461023257806318160ddd1461026d57806323b872dd146102945780632f745c59146102d757806342842e0e146103105780634f6ccce7146103535780636352211e1461037d57806370a08231146103a75780638462151c146103da57806395d89b411461045d578063a22cb46514610472578063b88d4fde146104ad578063bd11f69d14610580578063c87b56dd146105aa578063d85d3d27146105d4578063e985e9c514610687575b600080fd5b34801561011157600080fd5b5061014e6004803603602081101561012857600080fd5b50357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166106c2565b604080519115158252519081900360200190f35b34801561016e57600080fd5b506101776106f6565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101b1578181015183820152602001610199565b50505050905090810190601f1680156101de5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101f857600080fd5b506102166004803603602081101561020f57600080fd5b503561078d565b60408051600160a060020a039092168252519081900360200190f35b34801561023e57600080fd5b5061026b6004803603604081101561025557600080fd5b50600160a060020a038135169060200135610830565b005b34801561027957600080fd5b506102826109c8565b60408051918252519081900360200190f35b3480156102a057600080fd5b5061026b600480360360608110156102b757600080fd5b50600160a060020a038135811691602081013590911690604001356109ce565b3480156102e357600080fd5b50610282600480360360408110156102fa57600080fd5b50600160a060020a038135169060200135610a64565b34801561031c57600080fd5b5061026b6004803603606081101561033357600080fd5b50600160a060020a03813581169160208101359091169060400135610b22565b34801561035f57600080fd5b506102826004803603602081101561037657600080fd5b5035610b3e565b34801561038957600080fd5b50610216600480360360208110156103a057600080fd5b5035610be4565b3480156103b357600080fd5b50610282600480360360208110156103ca57600080fd5b5035600160a060020a0316610c7f565b3480156103e657600080fd5b5061040d600480360360208110156103fd57600080fd5b5035600160a060020a0316610d28565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015610449578181015183820152602001610431565b505050509050019250505060405180910390f35b34801561046957600080fd5b50610177610d89565b34801561047e57600080fd5b5061026b6004803603604081101561049557600080fd5b50600160a060020a0381351690602001351515610dea565b3480156104b957600080fd5b5061026b600480360360808110156104d057600080fd5b600160a060020a0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561050b57600080fd5b82018360208201111561051d57600080fd5b8035906020019184600183028401116401000000008311171561053f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610eb9945050505050565b34801561058c57600080fd5b50610177600480360360208110156105a357600080fd5b5035610f52565b3480156105b657600080fd5b50610177600480360360208110156105cd57600080fd5b5035610ff9565b3480156105e057600080fd5b5061026b600480360360208110156105f757600080fd5b81019060208101813564010000000081111561061257600080fd5b82018360208201111561062457600080fd5b8035906020019184600183028401116401000000008311171561064657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550611115945050505050565b34801561069357600080fd5b5061014e600480360360408110156106aa57600080fd5b50600160a060020a038135811691602001351661124d565b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191660009081526020819052604090205460ff1690565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107825780601f1061075757610100808354040283529160200191610782565b820191906000526020600020905b81548152906001019060200180831161076557829003601f168201915b505050505090505b90565b60006107988261127b565b1515610814576040805160e560020a62461bcd02815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606482015290519081900360840190fd5b50600090815260026020526040902054600160a060020a031690565b600061083b82610be4565b9050600160a060020a0383811690821614156108c7576040805160e560020a62461bcd02815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b33600160a060020a03821614806108e357506108e3813361124d565b151561095f576040805160e560020a62461bcd02815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c0000000000000000606482015290519081900360840190fd5b600082815260026020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60075490565b6109d83382611298565b1515610a54576040805160e560020a62461bcd02815260206004820152603160248201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60448201527f776e6572206e6f7220617070726f766564000000000000000000000000000000606482015290519081900360840190fd5b610a5f83838361137d565b505050565b6000610a6f83610c7f565b8210610aeb576040805160e560020a62461bcd02815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0383166000908152600560205260409020805483908110610b0f57fe5b9060005260206000200154905092915050565b610a5f8383836020604051908101604052806000815250610eb9565b6000610b486109c8565b8210610bc4576040805160e560020a62461bcd02815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015290519081900360840190fd5b6007805483908110610bd257fe5b90600052602060002001549050919050565b600081815260016020526040812054600160a060020a0316801515610c79576040805160e560020a62461bcd02815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201527f656e7420746f6b656e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b92915050565b6000600160a060020a0382161515610d07576040805160e560020a62461bcd02815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382166000908152600360205260409020610c799061139c565b6060610d33826113a0565b805480602002602001604051908101604052809291908181526020018280548015610d7d57602002820191906000526020600020905b815481526020019060010190808311610d69575b50505050509050919050565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107825780601f1061075757610100808354040283529160200191610782565b600160a060020a038216331415610e4b576040805160e560020a62461bcd02815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b336000818152600460209081526040808320600160a060020a03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b610ec48484846109ce565b610ed0848484846113ba565b1515610f4c576040805160e560020a62461bcd02815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015290519081900360840190fd5b50505050565b600c805482908110610f6057fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815293509091830182828015610ff15780601f10610fc657610100808354040283529160200191610ff1565b820191906000526020600020905b815481529060010190602001808311610fd457829003601f168201915b505050505081565b60606110048261127b565b1515611080576040805160e560020a62461bcd02815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201527f6e6578697374656e7420746f6b656e0000000000000000000000000000000000606482015290519081900360840190fd5b6000828152600b602090815260409182902080548351601f600260001961010060018616150201909316929092049182018490048402810184019094528084529091830182828015610d7d5780601f106110e857610100808354040283529160200191610d7d565b820191906000526020600020905b8154815290600101906020018083116110f65750939695505050505050565b600d816040518082805190602001908083835b602083106111475780518252601f199092019160209182019101611128565b51815160209384036101000a600019018019909216911617905292019485525060405193849003019092205460ff16159150611184905057600080fd5b600c8054600181018083556000928352835190916111cb917fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7909101906020860190611ab8565b5090506111d83382611536565b6001600d836040518082805190602001908083835b6020831061120c5780518252601f1990920191602091820191016111ed565b51815160209384036101000a60001901801990921691161790529201948552506040519384900301909220805460ff19169315159390931790925550505050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205460ff1690565b600090815260016020526040902054600160a060020a0316151590565b60006112a38261127b565b151561131f576040805160e560020a62461bcd02815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201527f697374656e7420746f6b656e0000000000000000000000000000000000000000606482015290519081900360840190fd5b600061132a83610be4565b905080600160a060020a031684600160a060020a03161480611365575083600160a060020a031661135a8461078d565b600160a060020a0316145b806113755750611375818561124d565b949350505050565b611388838383611557565b6113928382611727565b610a5f828261181e565b5490565b600160a060020a0316600090815260056020526040902090565b60006113ce84600160a060020a031661185c565b15156113dc57506001611375565b6040517f150b7a020000000000000000000000000000000000000000000000000000000081523360048201818152600160a060020a03888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b8381101561146f578181015183820152602001611457565b50505050905090810190601f16801561149c5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b1580156114be57600080fd5b505af11580156114d2573d6000803e3d6000fd5b505050506040513d60208110156114e857600080fd5b50517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b6115408282611864565b61154a828261181e565b611553816119aa565b5050565b82600160a060020a031661156a82610be4565b600160a060020a0316146115ee576040805160e560020a62461bcd02815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201527f73206e6f74206f776e0000000000000000000000000000000000000000000000606482015290519081900360840190fd5b600160a060020a0382161515611673576040805160e560020a62461bcd028152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b61167c816119ee565b600160a060020a038316600090815260036020526040902061169d90611a38565b600160a060020a03821660009081526003602052604090206116be90611a4f565b600081815260016020526040808220805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600160a060020a03821660009081526005602052604081205461175190600163ffffffff611a5816565b6000838152600660205260409020549091508082146117ee57600160a060020a038416600090815260056020526040812080548490811061178e57fe5b90600052602060002001549050806005600087600160a060020a0316600160a060020a03168152602001908152602001600020838154811015156117ce57fe5b600091825260208083209091019290925591825260069052604090208190555b600160a060020a0384166000908152600560205260409020805490611817906000198301611b36565b5050505050565b600160a060020a0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b6000903b1190565b600160a060020a03821615156118c4576040805160e560020a62461bcd02815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b6118cd8161127b565b15611922576040805160e560020a62461bcd02815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b6000818152600160209081526040808320805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03871690811790915583526003909152902061196e90611a4f565b6040518190600160a060020a038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b600081815260026020526040902054600160a060020a031615611a35576000818152600260205260409020805473ffffffffffffffffffffffffffffffffffffffff191690555b50565b8054611a4b90600163ffffffff611a5816565b9055565b80546001019055565b600082821115611ab2576040805160e560020a62461bcd02815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611af957805160ff1916838001178555611b26565b82800160010185558215611b26579182015b82811115611b26578251825591602001919060010190611b0b565b50611b32929150611b56565b5090565b815481835581811115610a5f57600083815260209020610a5f9181019083015b61078a91905b80821115611b325760008155600101611b5c56fea165627a7a7230582005165867a0c55037c6936c955d5aa73b262357d7e32c74ca8700c69cfc4106a30029",
  "sourceMap": "125:1421:0:-;;;235:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;37053:155:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10907:40;10926:20;10907:18;;;;:40;:::i;:::-;13920;13939:20;13920:18;;;;:40;:::i;:::-;25977:51;25996:31;25977:18;;;;:51;:::i;:::-;34675:12;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;34697:16:1;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;34801:49:1;34820:29;34801:18;;;;:49;:::i;:::-;34603:254;;37053:155;;125:1421:0;;11631:190:1;11706:25;;;;;;11698:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11774:33;;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;11774:40:1;11810:4;11774:40;;;11631:190::o;125:1421:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;125:1421:0;;;-1:-1:-1;125:1421:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "125:1421:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11104:133:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11104:133:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;11104:133:1;-1:-1:-1;;11104:133:1;;:::i;:::-;;;;;;;;;;;;;;;;;;34962:83;;8:9:-1;5:2;;;30:1;27;20:12;5:2;34962:83:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;34962:83:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15937:200;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15937:200:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15937:200:1;;:::i;:::-;;;;-1:-1:-1;;;;;15937:200:1;;;;;;;;;;;;;;15241:411;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15241:411:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15241:411:1;;;;;;;;:::i;:::-;;26791:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26791:94:1;;;:::i;:::-;;;;;;;;;;;;;;;;17577:285;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17577:285:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;17577:285:1;;;;;;;;;;;;;;;;;:::i;26409:229::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;26409:229:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;26409:229:1;;;;;;;;:::i;18495:132::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18495:132:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;18495:132:1;;;;;;;;;;;;;;;;;:::i;27223:196::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;27223:196:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;27223:196:1;;:::i;14597:223::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14597:223:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14597:223:1;;:::i;14171:207::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14171:207:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14171:207:1;-1:-1:-1;;;;;14171:207:1;;:::i;705:156:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;705:156:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;705:156:0;-1:-1:-1;;;;;705:156:0;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;705:156:0;;;;;;;;;;;;;;;;;35154:87:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35154:87:1;;;:::i;16430:243::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16430:243:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;16430:243:1;;;;;;;;;;:::i;19332:265::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19332:265:1;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;19332:265:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;19332:265:1;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;19332:265:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;19332:265:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;19332:265:1;;-1:-1:-1;19332:265:1;;-1:-1:-1;;;;;19332:265:1:i;161:22:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;161:22:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;161:22:0;;:::i;35441:202:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;35441:202:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;35441:202:1;;:::i;295:335:0:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:335:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;295:335:0;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;295:335:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;295:335:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;295:335:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;295:335:0;;-1:-1:-1;295:335:0;;-1:-1:-1;;;;;295:335:0:i;16995:145:1:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16995:145:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;16995:145:1;;;;;;;;;;:::i;11104:133::-;-1:-1:-1;;11197:33:1;11174:4;11197:33;;;;;;;;;;;;;;11104:133::o;34962:83::-;35033:5;35026:12;;;;;;;;-1:-1:-1;;35026:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35001:13;;35026:12;;35033:5;;35026:12;;35033:5;35026:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;34962:83;;:::o;15937:200::-;15996:7;16023:16;16031:7;16023;:16::i;:::-;16015:73;;;;;;;-1:-1:-1;;;;;16015:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;16106:24:1;;;;:15;:24;;;;;;-1:-1:-1;;;;;16106:24:1;;15937:200::o;15241:411::-;15304:13;15320:16;15328:7;15320;:16::i;:::-;15304:32;-1:-1:-1;;;;;;15354:11:1;;;;;;;;15346:57;;;;;-1:-1:-1;;;;;15346:57:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15422:10;-1:-1:-1;;;;;15422:19:1;;;;:58;;;15445:35;15462:5;15469:10;15445:16;:35::i;:::-;15414:148;;;;;;;-1:-1:-1;;;;;15414:148:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15573:24;;;;:15;:24;;;;;;:29;;-1:-1:-1;;15573:29:1;-1:-1:-1;;;;;15573:29:1;;;;;;;;;15617:28;;15573:24;;15617:28;;;;;;;15241:411;;;:::o;26791:94::-;26861:10;:17;26791:94;:::o;17577:285::-;17719:39;17738:10;17750:7;17719:18;:39::i;:::-;17711:101;;;;;;;-1:-1:-1;;;;;17711:101:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17823:32;17837:4;17843:2;17847:7;17823:13;:32::i;:::-;17577:285;;;:::o;26409:229::-;26489:7;26524:16;26534:5;26524:9;:16::i;:::-;26516:24;;26508:80;;;;;-1:-1:-1;;;;;26508:80:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26605:19:1;;;;;;:12;:19;;;;;:26;;26625:5;;26605:26;;;;;;;;;;;;;;26598:33;;26409:229;;;;:::o;18495:132::-;18581:39;18598:4;18604:2;18608:7;18581:39;;;;;;;;;;;;;:16;:39::i;27223:196::-;27281:7;27316:13;:11;:13::i;:::-;27308:21;;27300:78;;;;;-1:-1:-1;;;;;27300:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27395:10;:17;;27406:5;;27395:17;;;;;;;;;;;;;;27388:24;;27223:196;;;:::o;14597:223::-;14652:7;14687:20;;;:11;:20;;;;;;-1:-1:-1;;;;;14687:20:1;14725:19;;;14717:73;;;;;-1:-1:-1;;;;;14717:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14808:5;14597:223;-1:-1:-1;;14597:223:1:o;14171:207::-;14226:7;-1:-1:-1;;;;;14253:19:1;;;;14245:74;;;;;-1:-1:-1;;;;;14245:74:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;14337:24:1;;;;;;:17;:24;;;;;:34;;:32;:34::i;705:156:0:-;791:16;832:21;847:5;832:14;:21::i;:::-;825:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;705:156;;;:::o;35154:87:1:-;35227:7;35220:14;;;;;;;;-1:-1:-1;;35220:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35195:13;;35220:14;;35227:7;;35220:14;;35227:7;35220:14;;;;;;;;;;;;;;;;;;;;;;;;16430:243;-1:-1:-1;;;;;16509:16:1;;16515:10;16509:16;;16501:54;;;;;-1:-1:-1;;;;;16501:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;16585:10;16566:30;;;;:18;:30;;;;;;;;-1:-1:-1;;;;;16566:34:1;;;;;;;;;;;;:45;;-1:-1:-1;;16566:45:1;;;;;;;;;;16626:40;;;;;;;16566:34;;16585:10;16626:40;;;;;;;;;;;16430:243;;:::o;19332:265::-;19438:31;19451:4;19457:2;19461:7;19438:12;:31::i;:::-;19487:48;19510:4;19516:2;19520:7;19529:5;19487:22;:48::i;:::-;19479:111;;;;;;;-1:-1:-1;;;;;19479:111:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19332:265;;;;:::o;161:22:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;161:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;161:22:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;35441:202:1:-;35499:13;35532:16;35540:7;35532;:16::i;:::-;35524:76;;;;;;;-1:-1:-1;;;;;35524:76:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35617:19;;;;:10;:19;;;;;;;;;35610:26;;;;;;-1:-1:-1;;35610:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;35617:19;;35610:26;;35617:19;35610:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;35610:26:1;;35441:202;-1:-1:-1;;;;;;35441:202:1:o;295:335:0:-;391:12;404:6;391:20;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;391:20:0;;;;;-1:-1:-1;391:20:0;;;;;;;;;;;;;390:21;;-1:-1:-1;382:30:0;;-1:-1:-1;382:30:0;;;;;437:6;27:10:-1;;39:1;23:18;;45:23;;;423:11:0;437:19;;;;;23:18:-1;;437:19:0;;;;;;;;;;;;:::i;:::-;;423:33;;467:22;473:10;485:3;467:5;:22::i;:::-;523:4;500:12;513:6;500:20;;;;;;;;;;;;;36:153:-1;66:2;58:11;;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;299:10;344;;263:2;259:12;;;254:3;250:22;-1:-1;;246:30;311:9;;295:26;;;340:21;;377:20;365:33;;500:20:0;;;;;-1:-1:-1;500:20:0;;;;;;;;;;:27;;-1:-1:-1;;500:27:0;;;;;;;;;;;-1:-1:-1;;;;295:335:0:o;16995:145:1:-;-1:-1:-1;;;;;17098:25:1;;;17075:4;17098:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;16995:145::o;19792:152::-;19849:4;19881:20;;;:11;:20;;;;;;-1:-1:-1;;;;;19881:20:1;19918:19;;;19792:152::o;20305:329::-;20390:4;20414:16;20422:7;20414;:16::i;:::-;20406:73;;;;;;;-1:-1:-1;;;;;20406:73:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20489:13;20505:16;20513:7;20505;:16::i;:::-;20489:32;;20550:5;-1:-1:-1;;;;;20539:16:1;:7;-1:-1:-1;;;;;20539:16:1;;:51;;;;20583:7;-1:-1:-1;;;;;20559:31:1;:20;20571:7;20559:11;:20::i;:::-;-1:-1:-1;;;;;20559:31:1;;20539:51;:87;;;;20594:32;20611:5;20618:7;20594:16;:32::i;:::-;20531:96;20305:329;-1:-1:-1;;;;20305:329:1:o;27794:239::-;27879:38;27899:4;27905:2;27909:7;27879:19;:38::i;:::-;27928:47;27961:4;27967:7;27928:32;:47::i;:::-;27986:40;28014:2;28018:7;27986:27;:40::i;9816:112::-;9907:14;;9816:112::o;29330:124::-;-1:-1:-1;;;;;29428:19:1;29392:17;29428:19;;;:12;:19;;;;;;29330:124::o;23471:347::-;23592:4;23617:15;:2;-1:-1:-1;;;;;23617:13:1;;:15::i;:::-;23616:16;23612:58;;;-1:-1:-1;23655:4:1;23648:11;;23612:58;23696:70;;;;;23733:10;23696:70;;;;;;-1:-1:-1;;;;;23696:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;23680:13;;23696:36;;;;;;23733:10;;23745:4;;23751:7;;23760:5;;23696:70;;;;;;;;;;;23680:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;23696:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23696:70:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23696:70:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;23696:70:1;-1:-1:-1;;23784:26:1;23794:16;23784:26;;-1:-1:-1;;23471:347:1;;;;;;:::o;28290:196::-;28353:24;28365:2;28369:7;28353:11;:24::i;:::-;28388:40;28416:2;28420:7;28388:27;:40::i;:::-;28439;28471:7;28439:31;:40::i;:::-;28290:196;;:::o;22451:447::-;22564:4;-1:-1:-1;;;;;22544:24:1;:16;22552:7;22544;:16::i;:::-;-1:-1:-1;;;;;22544:24:1;;22536:78;;;;;-1:-1:-1;;;;;22536:78:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22632:16:1;;;;22624:65;;;;;-1:-1:-1;;;;;22624:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22700:23;22715:7;22700:14;:23::i;:::-;-1:-1:-1;;;;;22734:23:1;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;22779:21:1;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;22823:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;22823:25:1;-1:-1:-1;;;;;22823:25:1;;;;;;;;;22864:27;;22823:20;;22864:27;;;;;;;22451:447;;;:::o;30902:1128::-;-1:-1:-1;;;;;31189:18:1;;31164:22;31189:18;;;:12;:18;;;;;:25;:32;;31219:1;31189:32;:29;:32;:::i;:::-;31231:18;31252:26;;;:17;:26;;;;;;31164:57;;-1:-1:-1;31382:28:1;;;31378:323;;-1:-1:-1;;;;;31448:18:1;;31426:19;31448:18;;;:12;:18;;;;;:34;;31467:14;;31448:34;;;;;;;;;;;;;;31426:56;;31530:11;31497:12;:18;31510:4;-1:-1:-1;;;;;31497:18:1;-1:-1:-1;;;;;31497:18:1;;;;;;;;;;;;31516:10;31497:30;;;;;;;;;;;;;;;;;;;;;:44;;;;31613:30;;;:17;:30;;;;;:43;;;31378:323;-1:-1:-1;;;;;31787:18:1;;;;;;:12;:18;;;;;:27;;;;;-1:-1:-1;;31787:27:1;;;:::i;:::-;;30902:1128;;;;:::o;29748:183::-;-1:-1:-1;;;;;29861:16:1;;;;;;;:12;:16;;;;;;;;:23;;29832:26;;;:17;:26;;;;;:52;;;29894:16;;;39:1:-1;23:18;;45:23;;29894:30:1;;;;;;;;29748:183::o;8300:413::-;8360:4;8660:20;;8698:8;;8300:413::o;20879:327::-;-1:-1:-1;;;;;20950:16:1;;;;20942:61;;;;;-1:-1:-1;;;;;20942:61:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21022:16;21030:7;21022;:16::i;:::-;21021:17;21013:58;;;;;-1:-1:-1;;;;;21013:58:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;21082:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;21082:25:1;-1:-1:-1;;;;;21082:25:1;;;;;;;;21117:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;21166;;21191:7;;-1:-1:-1;;;;;21166:33:1;;;21183:1;;21166:33;;21183:1;;21166:33;20879:327;;:::o;30126:161::-;30229:10;:17;;30202:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;30256:24:1;;;;;;;30126:161::o;23980:171::-;24079:1;24043:24;;;:15;:24;;;;;;-1:-1:-1;;;;;24043:24:1;:38;24039:106;;24132:1;24097:24;;;:15;:24;;;;;:37;;-1:-1:-1;;24097:37:1;;;24039:106;23980:171;:::o;10029:108::-;10109:14;;:21;;10128:1;10109:21;:18;:21;:::i;:::-;10092:38;;10029:108::o;9934:89::-;9997:19;;10015:1;9997:19;;;9934:89::o;5437:179::-;5495:7;5522:6;;;;5514:49;;;;;-1:-1:-1;;;;;5514:49:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5585:5:1;;;5437:179::o;125:1421:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;125:1421:0;;;-1:-1:-1;125:1421:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.5.0;\r\n\r\nimport \"./ERC721Full.sol\";\r\n\r\n// import \"./stringUtils.sol\";\r\n\r\ncontract Color is ERC721Full {\r\n    string[] public colors;\r\n    mapping(string => bool) _colorExists;\r\n\r\n    constructor() public ERC721Full(\"Color\", \"COLOR\") {}\r\n\r\n    function mint(string memory _color) public {\r\n        // Require unique color\r\n        require(!_colorExists[_color]);\r\n        uint256 _id = colors.push(_color);\r\n        _mint(msg.sender, _id);\r\n        _colorExists[_color] = true;\r\n\r\n        // Color - add it\r\n\r\n        // Call the mint function\r\n        // Color - track it\r\n    }\r\n\r\n    /* @dev Returns an array of ids of horses owned by '_from' */\r\n    function tokensOfOwner(address _from)\r\n        public\r\n        view\r\n        returns (uint256[] memory)\r\n    {\r\n        return _tokensOfOwner(_from);\r\n    }\r\n    // function fmint(string memory _color) public returns (uint256 tokenId) {\r\n    //     // Require unique color\r\n    //     require(!_colorExists[_color]);\r\n    //     uint256 _id = colors.push(_color);\r\n    //     _mint(msg.sender, _id);\r\n    //     _colorExists[_color] = true;\r\n    //     return _id;\r\n    //     // Color - add it\r\n    //     // Call the mint function\r\n    //     // Color - track it\r\n    // }\r\n\r\n    // function returnOwnerOf(string memory _color)\r\n    //     public\r\n    // view\r\n    // returns (address owner)\r\n    // {\r\n    //     require(_colorExists[_color]);\r\n    //     address ownerAddress = ownerOf(_id);\r\n    //     return ownerAddress;\r\n    // }\r\n}\r\n",
  "sourcePath": "E:/blockchainProject/collectibles/nft/src/contracts/Color.sol",
  "ast": {
    "absolutePath": "/E/blockchainProject/collectibles/nft/src/contracts/Color.sol",
    "exportedSymbols": {
      "Color": [
        65
      ]
    },
    "id": 66,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "absolutePath": "/E/blockchainProject/collectibles/nft/src/contracts/ERC721Full.sol",
        "file": "./ERC721Full.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 66,
        "sourceUnit": 1521,
        "src": "61:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1520,
              "src": "143:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$1520",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "143:10:0"
          }
        ],
        "contractDependencies": [
          75,
          176,
          438,
          996,
          1021,
          1354,
          1375,
          1500,
          1520
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 65,
        "linearizedBaseContracts": [
          65,
          1520,
          1500,
          1375,
          1354,
          1021,
          996,
          176,
          438,
          75
        ],
        "name": "Color",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7,
            "name": "colors",
            "nodeType": "VariableDeclaration",
            "scope": 65,
            "src": "161:22:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
              "typeString": "string[]"
            },
            "typeName": {
              "baseType": {
                "id": 5,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "161:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "id": 6,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "161:8:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                "typeString": "string[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 11,
            "name": "_colorExists",
            "nodeType": "VariableDeclaration",
            "scope": 65,
            "src": "190:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
              "typeString": "mapping(string => bool)"
            },
            "typeName": {
              "id": 10,
              "keyType": {
                "id": 8,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "198:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "190:23:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                "typeString": "mapping(string => bool)"
              },
              "valueType": {
                "id": 9,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "208:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 18,
              "nodeType": "Block",
              "src": "285:2:0",
              "statements": []
            },
            "documentation": null,
            "id": 19,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "436f6c6f72",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "267:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_f86d44f1b3080fc640c3bc711000ce53504da44b246ae744f9a196485424813c",
                      "typeString": "literal_string \"Color\""
                    },
                    "value": "Color"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "434f4c4f52",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "276:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_e108be43dbedebdd6a5e12088e3ff0ee819db892baccf0fc636e26a2da6c252c",
                      "typeString": "literal_string \"COLOR\""
                    },
                    "value": "COLOR"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1520,
                  "src": "256:10:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$1520_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "256:28:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "246:2:0"
            },
            "returnParameters": {
              "id": 17,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "285:0:0"
            },
            "scope": 65,
            "src": "235:52:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "338:292:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 28,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "390:21:0",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 25,
                            "name": "_colorExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11,
                            "src": "391:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                              "typeString": "mapping(string memory => bool)"
                            }
                          },
                          "id": 27,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 26,
                            "name": "_color",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "404:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "391:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 24,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1591,
                        1592
                      ],
                      "referencedDeclaration": 1591,
                      "src": "382:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 29,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "382:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30,
                  "nodeType": "ExpressionStatement",
                  "src": "382:30:0"
                },
                {
                  "assignments": [
                    32
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 32,
                      "name": "_id",
                      "nodeType": "VariableDeclaration",
                      "scope": 50,
                      "src": "423:11:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 31,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "423:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 35,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "449:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 33,
                        "name": "colors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7,
                        "src": "437:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage",
                          "typeString": "string storage ref[] storage ref"
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "437:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_string_storage_$returns$_t_uint256_$",
                        "typeString": "function (string storage ref) returns (uint256)"
                      }
                    },
                    "id": 36,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "437:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "423:33:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 39,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1588,
                          "src": "473:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "473:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 41,
                        "name": "_id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "485:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1161
                      ],
                      "referencedDeclaration": 1161,
                      "src": "467:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "467:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "467:22:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 48,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 44,
                        "name": "_colorExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "500:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_bool_$",
                          "typeString": "mapping(string memory => bool)"
                        }
                      },
                      "id": 46,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 45,
                        "name": "_color",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "513:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "500:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 47,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "523:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "500:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 49,
                  "nodeType": "ExpressionStatement",
                  "src": "500:27:0"
                }
              ]
            },
            "documentation": null,
            "id": 51,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "name": "_color",
                  "nodeType": "VariableDeclaration",
                  "scope": 51,
                  "src": "309:20:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "309:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "308:22:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "338:0:0"
            },
            "scope": 65,
            "src": "295:335:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 63,
              "nodeType": "Block",
              "src": "814:47:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 60,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "847:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 59,
                      "name": "_tokensOfOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1204,
                      "src": "832:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (address) view returns (uint256[] storage pointer)"
                      }
                    },
                    "id": 61,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "832:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[] storage pointer"
                    }
                  },
                  "functionReturnParameters": 58,
                  "id": 62,
                  "nodeType": "Return",
                  "src": "825:28:0"
                }
              ]
            },
            "documentation": null,
            "id": 64,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokensOfOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "728:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "727:15:0"
            },
            "returnParameters": {
              "id": 58,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 57,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 64,
                  "src": "791:16:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 55,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "791:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 56,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "791:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "790:18:0"
            },
            "scope": 65,
            "src": "705:156:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 66,
        "src": "125:1421:0"
      }
    ],
    "src": "33:1515:0"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/E/blockchainProject/collectibles/nft/src/contracts/Color.sol",
      "exportedSymbols": {
        "Color": [
          65
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.5",
            ".0"
          ]
        },
        "id": 1,
        "name": "PragmaDirective",
        "src": "33:24:0"
      },
      {
        "attributes": {
          "SourceUnit": 1521,
          "absolutePath": "/E/blockchainProject/collectibles/nft/src/contracts/ERC721Full.sol",
          "file": "./ERC721Full.sol",
          "scope": 66,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2,
        "name": "ImportDirective",
        "src": "61:26:0"
      },
      {
        "attributes": {
          "contractDependencies": [
            75,
            176,
            438,
            996,
            1021,
            1354,
            1375,
            1500,
            1520
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            65,
            1520,
            1500,
            1375,
            1354,
            1021,
            996,
            176,
            438,
            75
          ],
          "name": "Color",
          "scope": 66
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC721Full",
                  "referencedDeclaration": 1520,
                  "type": "contract ERC721Full"
                },
                "id": 3,
                "name": "UserDefinedTypeName",
                "src": "143:10:0"
              }
            ],
            "id": 4,
            "name": "InheritanceSpecifier",
            "src": "143:10:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "colors",
              "scope": 65,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "string[]",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "string[]"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 5,
                    "name": "ElementaryTypeName",
                    "src": "161:6:0"
                  }
                ],
                "id": 6,
                "name": "ArrayTypeName",
                "src": "161:8:0"
              }
            ],
            "id": 7,
            "name": "VariableDeclaration",
            "src": "161:22:0"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_colorExists",
              "scope": 65,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(string => bool)",
              "value": null,
              "visibility": "internal"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(string => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "string",
                      "type": "string"
                    },
                    "id": 8,
                    "name": "ElementaryTypeName",
                    "src": "198:6:0"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 9,
                    "name": "ElementaryTypeName",
                    "src": "208:4:0"
                  }
                ],
                "id": 10,
                "name": "Mapping",
                "src": "190:23:0"
              }
            ],
            "id": 11,
            "name": "VariableDeclaration",
            "src": "190:36:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 65,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 12,
                "name": "ParameterList",
                "src": "246:2:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 17,
                "name": "ParameterList",
                "src": "285:0:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1520,
                      "type": "type(contract ERC721Full)",
                      "value": "ERC721Full"
                    },
                    "id": 13,
                    "name": "Identifier",
                    "src": "256:10:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "436f6c6f72",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Color\"",
                      "value": "Color"
                    },
                    "id": 14,
                    "name": "Literal",
                    "src": "267:7:0"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "434f4c4f52",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"COLOR\"",
                      "value": "COLOR"
                    },
                    "id": 15,
                    "name": "Literal",
                    "src": "276:7:0"
                  }
                ],
                "id": 16,
                "name": "ModifierInvocation",
                "src": "256:28:0"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 18,
                "name": "Block",
                "src": "285:2:0"
              }
            ],
            "id": 19,
            "name": "FunctionDefinition",
            "src": "235:52:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mint",
              "scope": 65,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_color",
                      "scope": 51,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 20,
                        "name": "ElementaryTypeName",
                        "src": "309:6:0"
                      }
                    ],
                    "id": 21,
                    "name": "VariableDeclaration",
                    "src": "309:20:0"
                  }
                ],
                "id": 22,
                "name": "ParameterList",
                "src": "308:22:0"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 23,
                "name": "ParameterList",
                "src": "338:0:0"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                1591,
                                1592
                              ],
                              "referencedDeclaration": 1591,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 24,
                            "name": "Identifier",
                            "src": "382:7:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11,
                                      "type": "mapping(string memory => bool)",
                                      "value": "_colorExists"
                                    },
                                    "id": 25,
                                    "name": "Identifier",
                                    "src": "391:12:0"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 21,
                                      "type": "string memory",
                                      "value": "_color"
                                    },
                                    "id": 26,
                                    "name": "Identifier",
                                    "src": "404:6:0"
                                  }
                                ],
                                "id": 27,
                                "name": "IndexAccess",
                                "src": "391:20:0"
                              }
                            ],
                            "id": 28,
                            "name": "UnaryOperation",
                            "src": "390:21:0"
                          }
                        ],
                        "id": 29,
                        "name": "FunctionCall",
                        "src": "382:30:0"
                      }
                    ],
                    "id": 30,
                    "name": "ExpressionStatement",
                    "src": "382:30:0"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        32
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "_id",
                          "scope": 50,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 31,
                            "name": "ElementaryTypeName",
                            "src": "423:7:0"
                          }
                        ],
                        "id": 32,
                        "name": "VariableDeclaration",
                        "src": "423:11:0"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (string storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7,
                                  "type": "string storage ref[] storage ref",
                                  "value": "colors"
                                },
                                "id": 33,
                                "name": "Identifier",
                                "src": "437:6:0"
                              }
                            ],
                            "id": 34,
                            "name": "MemberAccess",
                            "src": "437:11:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 21,
                              "type": "string memory",
                              "value": "_color"
                            },
                            "id": 35,
                            "name": "Identifier",
                            "src": "449:6:0"
                          }
                        ],
                        "id": 36,
                        "name": "FunctionCall",
                        "src": "437:19:0"
                      }
                    ],
                    "id": 37,
                    "name": "VariableDeclarationStatement",
                    "src": "423:33:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                1161
                              ],
                              "referencedDeclaration": 1161,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 38,
                            "name": "Identifier",
                            "src": "467:5:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1588,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 39,
                                "name": "Identifier",
                                "src": "473:3:0"
                              }
                            ],
                            "id": 40,
                            "name": "MemberAccess",
                            "src": "473:10:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 32,
                              "type": "uint256",
                              "value": "_id"
                            },
                            "id": 41,
                            "name": "Identifier",
                            "src": "485:3:0"
                          }
                        ],
                        "id": 42,
                        "name": "FunctionCall",
                        "src": "467:22:0"
                      }
                    ],
                    "id": 43,
                    "name": "ExpressionStatement",
                    "src": "467:22:0"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 11,
                                  "type": "mapping(string memory => bool)",
                                  "value": "_colorExists"
                                },
                                "id": 44,
                                "name": "Identifier",
                                "src": "500:12:0"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 21,
                                  "type": "string memory",
                                  "value": "_color"
                                },
                                "id": 45,
                                "name": "Identifier",
                                "src": "513:6:0"
                              }
                            ],
                            "id": 46,
                            "name": "IndexAccess",
                            "src": "500:20:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 47,
                            "name": "Literal",
                            "src": "523:4:0"
                          }
                        ],
                        "id": 48,
                        "name": "Assignment",
                        "src": "500:27:0"
                      }
                    ],
                    "id": 49,
                    "name": "ExpressionStatement",
                    "src": "500:27:0"
                  }
                ],
                "id": 50,
                "name": "Block",
                "src": "338:292:0"
              }
            ],
            "id": 51,
            "name": "FunctionDefinition",
            "src": "295:335:0"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "tokensOfOwner",
              "scope": 65,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_from",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 52,
                        "name": "ElementaryTypeName",
                        "src": "728:7:0"
                      }
                    ],
                    "id": 53,
                    "name": "VariableDeclaration",
                    "src": "728:13:0"
                  }
                ],
                "id": 54,
                "name": "ParameterList",
                "src": "727:15:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 64,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "length": null,
                          "type": "uint256[]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 55,
                            "name": "ElementaryTypeName",
                            "src": "791:7:0"
                          }
                        ],
                        "id": 56,
                        "name": "ArrayTypeName",
                        "src": "791:9:0"
                      }
                    ],
                    "id": 57,
                    "name": "VariableDeclaration",
                    "src": "791:16:0"
                  }
                ],
                "id": 58,
                "name": "ParameterList",
                "src": "790:18:0"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 58
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256[] storage pointer",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1204,
                              "type": "function (address) view returns (uint256[] storage pointer)",
                              "value": "_tokensOfOwner"
                            },
                            "id": 59,
                            "name": "Identifier",
                            "src": "832:14:0"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 53,
                              "type": "address",
                              "value": "_from"
                            },
                            "id": 60,
                            "name": "Identifier",
                            "src": "847:5:0"
                          }
                        ],
                        "id": 61,
                        "name": "FunctionCall",
                        "src": "832:21:0"
                      }
                    ],
                    "id": 62,
                    "name": "Return",
                    "src": "825:28:0"
                  }
                ],
                "id": 63,
                "name": "Block",
                "src": "814:47:0"
              }
            ],
            "id": 64,
            "name": "FunctionDefinition",
            "src": "705:156:0"
          }
        ],
        "id": 65,
        "name": "ContractDefinition",
        "src": "125:1421:0"
      }
    ],
    "id": 66,
    "name": "SourceUnit",
    "src": "33:1515:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xc7da18374fDAf64BCc6C489e8B401c33624f322B",
      "transactionHash": "0xbe5ce31b3ba7d06749990b6b231359d758fbb0884a7aa86db976e21358411424"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2020-12-24T11:56:45.084Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "name()": {
        "details": "Gets the token name.",
        "return": "string representing the token name"
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement `onERC721Received`, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See `IERC165.supportsInterface`.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "return": "string representing the token symbol"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "tokenURI(uint256)": {
        "details": "Returns an URI for a given token ID. Throws if the token ID does not exist. May return an empty string.",
        "params": {
          "tokenId": "uint256 ID of the token to query"
        }
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "return": "uint256 representing the total amount of tokens"
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use `safeTransferFrom` whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}